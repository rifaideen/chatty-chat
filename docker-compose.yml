volumes:
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_datalog:
    driver: local
  postgres_data:
    driver: local
  ollama:

services:
  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper/data
      - zookeeper_datalog:/bitnami/zookeeper/datalog
    restart: unless-stopped
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_LOG_LEVEL=DEBUG
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka/data
    depends_on:
      - zookeeper
    restart: unless-stopped
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: messaging_app
      POSTGRES_SSL_MODE: require
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/pgdata
      - ./certs/server.crt:/var/lib/postgresql/cert/server.crt
      - ./certs/server.key:/var/lib/postgresql/cert/server.key
    command:
      - "postgres"
      - "-c"
      - "ssl=on"
      - "-c"
      - "ssl_cert_file=/var/lib/postgresql/cert/server.crt"
      - "-c"
      - "ssl_key_file=/var/lib/postgresql/cert/server.key"
  auth-service:
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    environment:
      JWT_SECRET: jwt-secret-code
    ports:
      - "8001:8001"
  persistence-service:
    build:
      context: .
      dockerfile: services/persistence/Dockerfile
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_GROUP: persistence-group
      KAFKA_TOPIC_CONSUMER: chat
      KAFKA_TOPIC_PRODUCER: notification
      DSN: postgres://root:root@postgres:5432/messaging_app
    ports:
      - "8002:8002"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_started
    restart: unless-stopped
  websocket-service:
    build:
      context: .
      dockerfile: services/websocket/Dockerfile
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC_CONSUMER: notification
      KAFKA_TOPIC_PRODUCER: chat
      KAFKA_GROUP: websocket-group
      AUTH_SERVICE_URL: http://auth-service:8001
      OLLAMA_SERVICE_URL: http://ollama:11434
    ports:
      - "8003:8003"
    depends_on:
      kafka:
        condition: service_started
      ollama:
        condition: service_started
    restart: unless-stopped
  frontend:
    build:
      context: .
      dockerfile: web/Dockerfile
    ports:
      - "8004:8004"
    depends_on:
      - websocket-service
    restart: unless-stopped
